<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  
  <!-- 外围web工程，起到聚合的作用，即把所有的web项目，打成最终的war包。
        同时，在这个工程里，放置里公共的配置文件。例如所有的配置文件资源 -->
  
  <!-- 声明父模块 -->
  <parent>
  	<groupId>org.safari</groupId>
  	<artifactId>jordan-root</artifactId>
  	<version>0.0.1-SNAPSHOT</version>
    <relativePath>../jordan-root/pom.xml</relativePath>
  </parent>
  
  <artifactId>jordan-web</artifactId>
  <packaging>war</packaging>
  <name>jordan-web</name>
  <url>http://maven.apache.org</url>
  
  <dependencies>
  
  	<!-- 依赖其他项目工程 动态依赖。（静态依赖为jar） -->
	<dependency>
		<groupId>org.safari</groupId>
		<artifactId>jordan-pub</artifactId>
	</dependency>
	
	<dependency>
		<groupId>${project.groupId}</groupId>
		<artifactId>jordan-sys</artifactId>
		<version>${project.version}</version>
		<type>war</type>
	</dependency>
	
	<dependency>
		<groupId>${project.groupId}</groupId>
		<artifactId>jordan-log</artifactId>
		<version>${project.version}</version>
		<type>war</type>
	</dependency>
	
	<dependency>
		<groupId>${project.groupId}</groupId>
		<artifactId>jordan-sport</artifactId>
		<version>${project.version}</version>
		<type>war</type>
	</dependency>
	
	<dependency>
		<groupId>${project.groupId}</groupId>
		<artifactId>jordan-emall</artifactId>
		<version>${project.version}</version>
		<type>war</type>
	</dependency>
  
    <!-- 继承父类的依赖无须加上版本号  -->
    <dependency>
		<groupId>ch.qos.logback</groupId>
		<artifactId>logback-classic</artifactId>
	</dependency>

	<dependency>
		<groupId>ch.qos.logback</groupId>
		<artifactId>logback-core</artifactId>
	</dependency>

	<dependency>
		<groupId>org.slf4j</groupId>
		<artifactId>slf4j-api</artifactId>
	</dependency>

	<dependency>
		<groupId>commons-io</groupId>
		<artifactId>commons-io</artifactId>
	</dependency>

	<dependency>
		<groupId>commons-lang</groupId>
		<artifactId>commons-lang</artifactId>
	</dependency>
	
	<dependency>
		<groupId>org.apache.commons</groupId>
		<artifactId>commons-lang3</artifactId>
	</dependency>

	<dependency>
		<groupId>commons-dbcp</groupId>
		<artifactId>commons-dbcp</artifactId>
	</dependency>

	<dependency>
		<groupId>commons-fileupload</groupId>
		<artifactId>commons-fileupload</artifactId>
	</dependency>

	<!-- Spring begin -->
	<dependency>
		<groupId>org.springframework</groupId>
		<artifactId>spring-context-support</artifactId>
	</dependency>

	<dependency>
		<groupId>org.springframework</groupId>
		<artifactId>spring-orm</artifactId>
	</dependency>

	<dependency>
		<groupId>org.springframework</groupId>
		<artifactId>spring-web</artifactId>
	</dependency>

	<dependency>
		<groupId>org.springframework</groupId>
		<artifactId>spring-webmvc</artifactId>
	</dependency>

	<dependency>
		<groupId>org.springframework</groupId>
		<artifactId>spring-core</artifactId>
	</dependency>

	<dependency>
		<groupId>org.springframework</groupId>
		<artifactId>spring-test</artifactId>
	</dependency>
	<!-- Spring end -->

	<dependency>
		<groupId>org.mybatis</groupId>
		<artifactId>mybatis</artifactId>
	</dependency>

	<dependency>
		<groupId>org.mybatis</groupId>
		<artifactId>mybatis-spring</artifactId>
	</dependency>
	
	<dependency>
		<groupId>org.aspectj</groupId>
		<artifactId>aspectjweaver</artifactId>
	</dependency>
	
	<dependency>
		<groupId>com.mchange</groupId>
		<artifactId>c3p0</artifactId>
	</dependency>
	
	<dependency>
		<groupId>com.google.protobuf</groupId>
		<artifactId>protobuf-java</artifactId>
	</dependency>
	
	<dependency> 
		<groupId>net.sf.json-lib</groupId>
		<artifactId>json-lib</artifactId> 
	</dependency>
	
	<dependency>
   		<groupId>net.sf.ehcache</groupId>
   		<artifactId>ehcache</artifactId>
	</dependency>
	
	<dependency>
		<groupId>com.fasterxml.jackson.core</groupId>
		<artifactId>jackson-core</artifactId>
	</dependency>

	<dependency>
		<groupId>com.fasterxml.jackson.core</groupId>
		<artifactId>jackson-databind</artifactId>
	</dependency>
	
	<dependency>
		<groupId>org.apache.httpcomponents</groupId>
		<artifactId>httpclient</artifactId>
	</dependency>

	<dependency>
		<groupId>junit</groupId>
		<artifactId>junit</artifactId>
	</dependency>

	<dependency>
		<groupId>javax.servlet</groupId>
		<artifactId>servlet-api</artifactId>
	</dependency>
  </dependencies>
  
  <!-- 调用maven package时传入-Pdev（默认为dev，可以不传）参数， 则会使用 filter-dev.properties中的内容来替换resources目录中的配置文件 -->
	<profiles>
		<profile>
			<id>dev</id>
			<properties>
				<env>dev</env>
			</properties>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
		</profile>

		<profile>
			<id>test</id>
			<properties>
				<env>test</env>
			</properties>
		</profile>

		<profile>
			<id>pro</id>
			<properties>
				<env>pro</env>
			</properties>
		</profile>
	</profiles>
  
  <build>
    <finalName>jordan-web</finalName>
    
    <filters>
		<!--${env}是一个变量，表示当前使用的环境 -->
		<filter>${filters.base.path.main}/filter-${env}.properties</filter>
	</filters>

	<!-- default:src/main/java -->
	<sourceDirectory>src/main/java</sourceDirectory>
	<resources>
		<resource>
			<!-- default:src/main/resources 对src/main/resources下的资源进行过滤 -->
			<!-- 先指定 src/main/resources下所有文件及文件夹为资源文件 -->
			<directory>src/main/resources</directory>
			<filtering>true</filtering>
		</resource>
	</resources>

	<!-- default:src/test/java -->
	<testSourceDirectory>src/test/java</testSourceDirectory>

	<testResources>
		<testResource>
			<!-- default:src/main/resources -->
			<directory>src/test/resources</directory>
			<filtering>true</filtering>
		</testResource>
	</testResources>

	<!-- default:target/classes -->
	<outputDirectory>target/classes</outputDirectory>
	<!-- default:target/test-classes -->
	<testOutputDirectory>target/test-classes</testOutputDirectory>

	<plugins>
		<plugin>
			<groupId>org.apache.maven.plugins</groupId>
			<artifactId>maven-war-plugin</artifactId>
			<configuration>
			 	<packagingExcludes>WEB-INF/web.xml</packagingExcludes>  
                <overlays>  
                	<overlay>  
                        <groupId>${project.groupId}</groupId>  
                        <artifactId>jordan-log</artifactId>  
                    </overlay> 
                	<overlay>  
                        <groupId>${project.groupId}</groupId>  
                        <artifactId>jordan-sys</artifactId>  
                    </overlay> 
                    <overlay>  
                        <groupId>${project.groupId}</groupId>  
                        <artifactId>jordan-sport</artifactId>  
                    </overlay>  
                    <overlay>  
                        <groupId>${project.groupId}</groupId>  
                        <artifactId>jordan-emall</artifactId>  
                    </overlay>  
                </overlays>  
            </configuration> 
		</plugin>
	</plugins>
  </build>
</project>
